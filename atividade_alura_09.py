# -*- coding: utf-8 -*-
"""Atividade_Alura_09

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12fRJLISHw9PnXxhtfYmRbQJvCZAGkuu_
"""

class Conta:
    def __init__(self, numero, titular, saldo, limite=1000.0):
        self.__numero = numero
        self.__titular = titular
        self.__saldo = saldo
        self.__limite = limite

conta = Conta(210800, "Eduarda", 1000.0)
print(conta._Conta__saldo)

conta._Conta__numero = 800
print(conta._Conta__numero)


class Conta:
    def __init__(self, numero, titular, saldo, limite=1000.0):
        self._numero = numero
        self._titular = titular
        self._saldo = saldo
        self._limite = limite

    @property
    def numero(self):
        return self._numero

    @property
    def titular(self):
        return self._titular

    @property
    def saldo(self):
        return self._saldo

    @saldo.setter
    def saldo(self, valor):
        if valor >= 0:
            self._saldo = valor
        else:
            print("Saldo não pode ser negativo.")

    @property
    def limite(self):
        return self._limite

    @limite.setter
    def limite(self, valor):
        if valor >= 0:
            self._limite = valor
        else:
            print("Limite não pode ser negativo.")

a = Conta(123, "Bruno", 55.0, 1000.0)
b = Conta(321, "Camila", 100.0, 1000.0)



class Conta:
    __slots__ = ['_numero', '_titular', '_saldo', '_limite']

    def __init__(self, numero, titular, saldo, limite=1000.0):
        self._numero = numero
        self._titular = titular
        self._saldo = saldo
        self._limite = limite

    @property
    def numero(self):
        return self._numero

    @property
    def titular(self):
        return self._titular

    @property
    def saldo(self):
        return self._saldo

    @saldo.setter
    def saldo(self, valor):
        if valor >= 0:
            self._saldo = valor
        else:
            print("Saldo não pode ser negativo.")

    @property
    def limite(self):
        return self._limite

    @limite.setter
    def limite(self, valor):
        if valor >= 0:
            self._limite = valor
        else:
            print("Limite não pode ser negativo.")

conta = Conta(123, "André", 500.0)
print(conta.saldo)
conta.saldo = -100
print(conta.saldo)



class Conta:
    __slots__ = ['_numero', '_titular', '_saldo', '_limite', 'identificador']

    _contador = 0

    def __init__(self, numero, titular, saldo, limite=1000.0):
        Conta._contador += 1
        self.identificador = Conta._contador
        self._numero = numero
        self._titular = titular
        self._saldo = saldo
        self._limite = limite

    @property
    def numero(self):
        return self._numero

    @property
    def titular(self):
        return self._titular

    @property
    def saldo(self):
        return self._saldo

    @saldo.setter
    def saldo(self, valor):
        if valor >= 0:
            self._saldo = valor
        else:
            print("Saldo não pode ser negativo.")

    @property
    def limite(self):
        return self._limite

    @limite.setter
    def limite(self, valor):
        if valor >= 0:
            self._limite = valor
        else:
            print("Limite não pode ser negativo.")

    def __str__(self):
        return (f"ID: {self.identificador}, Conta: {self._numero}, Titular: {self._titular}, "
                f"Saldo: R${self._saldo}, Limite: R${self._limite}")

conta1 = Conta(123, "André", 500.0)
conta2 = Conta(456, "Larissa", 800.0)

print(conta1)
print(conta2)