# -*- coding: utf-8 -*-
"""Atividade_Alura_14

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12fRJLISHw9PnXxhtfYmRbQJvCZAGkuu_
"""

from collections.abc import MutableSequence

class SaldoInsuficienteError(RuntimeError):
    pass

class Conta:
    def __init__(self, numero, titular, saldo=0.0):
        self._numero = numero
        self._titular = titular
        self._saldo = saldo

    def deposita(self, valor):
        if valor < 0:
            raise ValueError('Você tentou depositar um valor negativo.')
        self._saldo += valor

    def saca(self, valor):
        if valor < 0:
            raise ValueError('Você tentou sacar um valor negativo.')
        if self._saldo < valor:
            raise SaldoInsuficienteError('Saldo insuficiente.')
        self._saldo -= valor

    @property
    def saldo(self):
        return self._saldo

class ContaCorrente(Conta):
    def __init__(self, numero, titular, saldo=0.0, limite=0.0):
        super().__init__(numero, titular, saldo)
        self._limite = limite

    def saca(self, valor):
        if valor < 0:
            raise ValueError('Você tentou sacar um valor negativo.')
        if self._saldo < valor:
            raise SaldoInsuficienteError('Saldo insuficiente.')
        self._saldo -= (valor + 0.10)

    def get_valor_imposto(self):
        return self._saldo * 0.01

class Contas(MutableSequence):
    def __init__(self):
        self._dados = []

    def __len__(self):
        return len(self._dados)

    def __getitem__(self, posicao):
        return self._dados[posicao]

    def __setitem__(self, posicao, valor):
        if isinstance(valor, ContaCorrente):
            self._dados[posicao] = valor
        else:
            raise TypeError("Valor atribuído não é uma ContaCorrente")

    def __delitem__(self, posicao):
        del self._dados[posicao]

    def insert(self, posicao, valor):
        if isinstance(valor, ContaCorrente):
            self._dados.insert(posicao, valor)
        else:
            raise TypeError("Valor inserido não é uma ContaCorrente")

if __name__ == '__main__':
    contas = Contas()

    dados_simulados = [
        ['001', 'André', 1200.0, 1000.0],
        ['002', 'Fernanda', 2200.0, 1500.0],
        ['003', 'Bruno', 1500.0, 1000.0],
        ['004', 'Daniela', 5300.0, 2000.0],
        ['005', 'Gabriel', 3300.0, 2500.0],
        ['006', 'Patrícia', 1700.0, 1000.0],
        ['007', 'Renata', 2300.0, 1000.0],
        ['008', 'Felipe', 6000.0, 4000.0],
        ['009', 'Juliana', 5230.0, 1000.0],
        ['010', 'Leandro', 4400.0, 4000.0],
    ]

    for linha in dados_simulados:
        conta = ContaCorrente(linha[0], linha[1], float(linha[2]), float(linha[3]))
        contas.append(conta)

    print('saldo - imposto')
    for c in contas:
        print(f'{c.saldo:.1f} - {c.get_valor_imposto():.1f}')